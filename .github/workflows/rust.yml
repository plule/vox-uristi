name: Rust

on:
  push:
    branches: [ "main" ]
    tags: ["v*"]
  pull_request:
    branches: [ "main" ]


env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: ["windows-latest", "ubuntu-latest"]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - name: Install packages (Linux)
      if: runner.os == 'Linux'
      #uses: awalsh128/cache-apt-pkgs-action@v1.2.2
      #TODO(emilk) use upstream when https://github.com/awalsh128/cache-apt-pkgs-action/pull/90 is merged
      uses: rerun-io/cache-apt-pkgs-action@59534850182063abf1b2c11bb3686722a12a8397
      with:
        packages: libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libgtk-3-dev # libgtk-3-dev is used by rfd
        version: 1.0
        execute_install_scripts: true
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
  
  release:
    strategy:
      matrix:
          include:
            - os: windows-latest
              file-name: vox-uristi.exe
              dst-file-name: vox-uristi-${{ github.ref_name }}.exe
            - os: ubuntu-latest
              file-name: vox-uristi
              dst-file-name: vox-uristi-${{ github.ref_name }}-experimental
    runs-on: ${{ matrix.os }}
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write
      packages: write
      deployments: write
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - name: Install packages (Linux)
      if: runner.os == 'Linux'
      #uses: awalsh128/cache-apt-pkgs-action@v1.2.2
      #TODO(emilk) use upstream when https://github.com/awalsh128/cache-apt-pkgs-action/pull/90 is merged
      uses: rerun-io/cache-apt-pkgs-action@59534850182063abf1b2c11bb3686722a12a8397
      with:
        packages: libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libgtk-3-dev # libgtk-3-dev is used by rfd
        version: 1.0
        execute_install_scripts: true
    - name: Build
      run: cargo build --release
    - name: Copy file to release
      run: cp target/release/${{ matrix.file-name }} ${{ matrix.dst-file-name }}
    - name: Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ matrix.dst-file-name }}
        draft: true
        body: |-
          # ☼Vox Uristi ${{ github.ref_name }}☼

  dependabot:
    name: 'Dependabot automerge'
    needs:
      - build
    permissions:
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}} # Detect that the PR author is dependabot
    steps:
      - uses: fastify/github-action-merge-dependabot@v3.8.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
